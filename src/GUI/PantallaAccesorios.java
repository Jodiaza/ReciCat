/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import datos.Gato;
import datos.Personaje;
import java.awt.BorderLayout;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author TOSHIBA
 */
public class PantallaAccesorios extends javax.swing.JPanel implements Serializable{
    
    private ArrayList<Boolean> colores = new ArrayList<>();
    private boolean rojo  =  cargarBool().get(0);
    private boolean azul  =  cargarBool().get(1);
    private boolean amarillo  =  cargarBool().get(2);
    private boolean morado  =  cargarBool().get(3);
    private boolean verde  =  cargarBool().get(4);
    private boolean rosado  =  cargarBool().get(5);
    private boolean naranja  =  cargarBool().get(6);
    private boolean cian  =  false;
    ImageIcon vendido = Pantalla.escalar(new ImageIcon("./src/img/vendido.png").
                getImage(), 60, 60);
    
    public PantallaAccesorios() {
        initComponents();
        colores.add(rojo);
        colores.add(azul);
        colores.add(amarillo);
        colores.add(morado);
        colores.add(verde);
        colores.add(rosado);
        colores.add(naranja);
        colores.add(cian);
        guardarBool(colores);
        ImageIcon atras = Pantalla.escalar(new ImageIcon("./src/img/atras.png").
                getImage(), 40, 40);
        btnAtras.setIcon(atras);
        comprado(rojo,btnRojo);
        comprado(azul,btnAzul);
        comprado(amarillo,btnAmarillo);
        comprado(morado,btnMorado);
        comprado(verde,btnVerde);
        comprado(rosado,btnRosado);
        comprado(naranja,btnNaranja);
        comprado(cian,btnCian);
        apagar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnAtras = new javax.swing.JButton();
        btnRojo = new javax.swing.JButton();
        btnAzul = new javax.swing.JButton();
        btnAmarillo = new javax.swing.JButton();
        btnMorado = new javax.swing.JButton();
        btnVerde = new javax.swing.JButton();
        btnRosado = new javax.swing.JButton();
        btnNaranja = new javax.swing.JButton();
        btnCian = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(238, 255, 204));

        btnAtras.setBackground(new java.awt.Color(255, 186, 68));
        btnAtras.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnRojo.setBackground(new java.awt.Color(255, 0, 0));
        btnRojo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnRojo);
        btnRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRojoActionPerformed(evt);
            }
        });

        btnAzul.setBackground(new java.awt.Color(0, 0, 255));
        btnAzul.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnAzul);
        btnAzul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAzulActionPerformed(evt);
            }
        });

        btnAmarillo.setBackground(new java.awt.Color(255, 255, 0));
        btnAmarillo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnAmarillo);
        btnAmarillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmarilloActionPerformed(evt);
            }
        });

        btnMorado.setBackground(new java.awt.Color(153, 0, 153));
        btnMorado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnMorado);
        btnMorado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoradoActionPerformed(evt);
            }
        });

        btnVerde.setBackground(new java.awt.Color(51, 255, 0));
        btnVerde.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnVerde);
        btnVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerdeActionPerformed(evt);
            }
        });

        btnRosado.setBackground(new java.awt.Color(255, 102, 255));
        btnRosado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnRosado);
        btnRosado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRosadoActionPerformed(evt);
            }
        });

        btnNaranja.setBackground(new java.awt.Color(255, 102, 0));
        btnNaranja.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnNaranja);
        btnNaranja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNaranjaActionPerformed(evt);
            }
        });

        btnCian.setBackground(new java.awt.Color(51, 255, 255));
        btnCian.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        buttonGroup1.add(btnCian);
        btnCian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCianActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel1.setText("Costo por cada color: 200 monedas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnMorado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnRosado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnNaranja, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addComponent(btnCian, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAzul, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMorado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNaranja, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCian, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnRosado, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        retroceder();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRojoActionPerformed
        apagar();
        cobrar("HojaSpritesRojo",rojo,0,btnRojo);
    }//GEN-LAST:event_btnRojoActionPerformed

    private void btnAzulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAzulActionPerformed
        apagar();
        cobrar("HojaSpritesAzulO",azul,1,btnAzul);
    }//GEN-LAST:event_btnAzulActionPerformed

    private void btnAmarilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmarilloActionPerformed
        apagar();
        cobrar("HojaSpritesAmarillo",amarillo,2,btnAmarillo);
    }//GEN-LAST:event_btnAmarilloActionPerformed

    private void btnMoradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoradoActionPerformed
        apagar();
        cobrar("HojaSpritesMorado",morado,3,btnMorado);
    }//GEN-LAST:event_btnMoradoActionPerformed

    private void btnVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerdeActionPerformed
        apagar();
        cobrar("HojaSpritesVerde",verde,4,btnVerde);
    }//GEN-LAST:event_btnVerdeActionPerformed

    private void btnRosadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRosadoActionPerformed
        apagar();
        cobrar("HojaSpritesRosado",rosado,5,btnRosado);
    }//GEN-LAST:event_btnRosadoActionPerformed

    private void btnNaranjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNaranjaActionPerformed
        apagar();
        cobrar("HojaSpritesNaranja",naranja,6,btnNaranja);
    }//GEN-LAST:event_btnNaranjaActionPerformed

    private void btnCianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCianActionPerformed
        apagar();
        cobrar("HojaSpritesAzulT",cian,7,btnCian);
    }//GEN-LAST:event_btnCianActionPerformed

    public void retroceder(){
        Gato gato = new Gato();
        PantallaInicio pantallaInicio = new PantallaInicio(true,gato);
        pantallaInicio.getjPanel1().setSize(370,620);
        pantallaInicio.getjPanel1().setLocation(0, 0);
        removeAll();
        add(pantallaInicio.getjPanel1(),BorderLayout.CENTER);
        gato.getT().start();
        revalidate();
        repaint();
    }
    
    public void cobrar(String hoja, boolean disponible,int i,JButton boton) {
        if (disponible) {
            Gato gatito = new Gato();
            if (gatito.getDinero() > 200) {
                gatito.setDinero(gatito.getDinero() - 200);
                Personaje.guardarDinero(gatito.getDinero());
                if (disponible) {
                    boton.setIcon(vendido);
                }
                disponible = false;
                colores.add(i, disponible);
                guardarBool(colores);
                salir(hoja);
            } else {
                JOptionPane.showMessageDialog(this, "Recolecta dinero alimentando a "
                        + "tu recicat ;)", "No tienes suficiente dinero!",
                        JOptionPane.WARNING_MESSAGE);
            } 
        }else{
            salir(hoja);
        }
    }
    
    private void apagar(){
        switch(Gato.getFile()){
            case "HojaSpritesRojo":
                prenderTodo();
                btnRojo.setEnabled(false);
                break;
            case "HojaSpritesMorado":
                prenderTodo();
                btnMorado.setEnabled(false);
                break;
            case "HojaSpritesVerde":
                prenderTodo();
                btnVerde.setEnabled(false);
                break;
            case "HojaSpritesAzulT":
                prenderTodo();
                btnCian.setEnabled(false);
                break;
            case "HojaSpritesRosado":
                prenderTodo();
                btnRosado.setEnabled(false);
                break;
            case "HojaSpritesAmarillo":
                prenderTodo();
                btnAmarillo.setEnabled(false);
                break;
            case "HojaSpritesNaranja":
                prenderTodo();
                btnNaranja.setEnabled(false);
                break;
            case "HojaSpritesAzulO":
                prenderTodo();
                btnAzul.setEnabled(false);
                break;
        }
    }
    
    private void prenderTodo(){
        btnAmarillo.setEnabled(true);
        btnAtras.setEnabled(true);
        btnAzul.setEnabled(true);
        btnCian.setEnabled(true);
        btnMorado.setEnabled(true);
        btnNaranja.setEnabled(true);
        btnRojo.setEnabled(true);
        btnRosado.setEnabled(true);
        btnVerde.setEnabled(true);  
    }
    
    public void salir(String file){
        Gato.setFile(file);
        Personaje.guardarHoja(file);
        HojaSprites hojaSprites = new HojaSprites(file);
        Gato gato= new Gato(hojaSprites);
        PantallaInicio pantallaInicio = new PantallaInicio(true,gato);
        pantallaInicio.getjPanel1().setSize(370,620);
        pantallaInicio.getjPanel1().setLocation(0, 0);
        removeAll();
        add(pantallaInicio.getjPanel1(),BorderLayout.CENTER);
        gato.getT().start();
        revalidate();
        repaint();
    }
    
    public void  comprado(Boolean bool,JButton boton){
        if(!bool){
            boton.setIcon(vendido);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmarillo;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnAzul;
    private javax.swing.JButton btnCian;
    private javax.swing.JButton btnMorado;
    private javax.swing.JButton btnNaranja;
    private javax.swing.JButton btnRojo;
    private javax.swing.JButton btnRosado;
    private javax.swing.JButton btnVerde;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public static ArrayList<Boolean> cargarBool(){
        try {
            FileInputStream entrada = new FileInputStream("./src/flujos/bools.obj");
            ObjectInputStream objeto = new ObjectInputStream(entrada);
            try {
                ArrayList<Boolean> hoja = (ArrayList<Boolean>) objeto.readObject();
                objeto.close();
                return hoja;
            } catch (IOException | ClassNotFoundException exception) {
                System.out.println(exception);
                return null;
            }
        } catch (IOException exception) {
            System.out.println(exception);
            return null;
        }
    }    
    
    public static void guardarBool(ArrayList<Boolean> hoja){
        try {
            FileOutputStream salida = new FileOutputStream("./src/flujos/bools.obj");
            ObjectOutputStream objeto = new ObjectOutputStream(salida);
            objeto.writeObject(hoja);
            objeto.close();
        } catch (Exception exception) {
            System.out.println("ERROR :(");
        }
    }
    
}
